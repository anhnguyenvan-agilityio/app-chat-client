{"version":3,"sources":["components/CustomInput.js","helpers/loginHelper.js","pages/LoginPage.js","graphql/mutation/loginMutation.js","pages/container/LoginPageContainer.js","components/SearchInput.js","components/UserInfoCard.js","components/MessageItem.js","helpers/dateTime.js","components/ChatRoom.js","containers/ChatRoomContainer.js","components/ContactCard.js","components/CustomLink.js","components/ListContact.js","components/PrivateRoute.js","pages/HomePage.js","pages/container/HomePageContainer.js","index.js"],"names":["CustomInput","React","forwardRef","props","ref","react_default","a","createElement","className","type","id","placeholder","title","value","required","htmlFor","getLocalUser","result","localStorage","getItem","JSON","parse","LoginPage","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signIn","event","preventDefault","login","variables","user","email","refs","password","state","history","push","components_CustomInput","onClick","style","marginTop","fontSize","Component","LOGIN_USER","gql","_templateObject","LoginPageContainer","react_apollo_esm","mutation","onCompleted","_ref","setItem","token","stringify","_ref2","error","LoginPage_LoginPage","SearchInput","name","UserInfoCard","src","image","alt","marginRight","lineHeight","logout","MessageItem","host","marginBottom","content","time","formatDate","date","inputDate","Date","currentDate","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","toLocaleString","CHAT_ADDED","ChatRoom_templateObject","componentName","renderListChat","contentChat","map","item","index","components_MessageItem","avatar","createdAt","key","submitChat","conversationID","chat","author","nextProps","_this2","loadingGetUser","setState","loadingGetConversation","sub","subscribeToMore","document","channel","updateQuery","prev","subscriptionData","getConversation","concat","toConsumableArray","data","chatAdded","__typename","scroll","scrollTop","scrollHeight","clientHeight","_this3","react","components_UserInfoCard","clear","GET_USER","ChatRoomContainer_templateObject","GET_CONVERSATION","_templateObject2","CHAT","_templateObject3","ChatRoomContainer","compose","graphql","options","match","params","loading","errorGetUser","getUser","hitory","clientOne","clientTwo","errorGetConversation","messageInput","mutate","message","ChatRoom","ContactCard","active","status","CustomLink","react_router","path","to","exact","activeOnlyWhenExact","children","react_router_dom","ListContact","listUser","users","components_CustomLink","url","components_ContactCard","PrivateRoute","component","rest","objectWithoutProperties","assign","render","pathname","from","location","HomePage","components_SearchInput","components_ListContact","components_PrivateRoute","GET_USERS","HomePageContainer_templateObject","HomePageContainer","fetchPolicy","getUsers","filter","httpLink","createHttpLink","uri","wsLink","WebSocketLink","reconnect","authLink","setContext","_","headers","setHeader","objectSpread","authorization","link","split","query","_getMainDefinition","getMainDefinition","kind","operation","cache","InMemoryCache","client","ApolloClient","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.64309e69.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CustomInput = React.forwardRef((props, ref) => (\n  <div className=\"form-label-group\">\n    <input\n      ref={ref}\n      type={props.type}\n      id={props.id}\n      className=\"form-control\"\n      placeholder={props.title}\n      value={props.value}\n      required\n    />\n    <label htmlFor={props.id}>{props.title}</label>\n  </div>\n));\n\nexport default CustomInput;\n","export const checkAuth = () => {\n  const result = localStorage.getItem(\"token\");\n  return !!result;\n};\n\nexport const getLocalUser = () => {\n  const result = localStorage.getItem(\"user\");\n  if (result) return JSON.parse(result);\n  return null;\n};\n","import React, { Component } from \"react\";\nimport \"./styles/LoginPage.css\";\nimport CustomInput from \"../components/CustomInput\";\nimport { getLocalUser } from \"../helpers/loginHelper\";\n\nexport default class LoginPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentWillMount() {\n    const user = getLocalUser();\n    if (user) {\n      this.props.history.push(\"/home\");\n    }\n  }\n\n  signIn = event => {\n    event.preventDefault();\n\n    this.props.login({\n      variables: {\n        user: {\n          email: this.refs.email.value,\n          password: this.refs.password.value\n        }\n      }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n            <div className=\"card-login card-signin my-5\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title text-center\">Sign In</h5>\n                <form className=\"form-signin\">\n                  <CustomInput\n                    ref=\"email\"\n                    title=\"Email address\"\n                    id=\"inputEmail\"\n                    type=\"email\"\n                  />\n                  <CustomInput\n                    ref=\"password\"\n                    title=\"Password\"\n                    id=\"inputPassword\"\n                    type=\"password\"\n                  />\n\n                  <button\n                    className=\"btn btn-lg btn-primary btn-block text-uppercase\"\n                    type=\"submit\"\n                    onClick={this.signIn}\n                  >\n                    Sign in\n                  </button>\n                </form>\n                <p style={{ marginTop: \"30px\", fontSize: \"15px\" }}>\n                  List Account\n                </p>\n                <p style={{ fontSize: \"12px\" }}>\n                  ironman@gmail.com / password: 123456\n                </p>\n                <p style={{ fontSize: \"12px\" }}>\n                  thor@gmail.com / password: 123456\n                </p>\n                <p style={{ fontSize: \"12px\" }}>\n                  captainamerican@gmail.com / password: 123456\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import gql from \"graphql-tag\";\n\nexport const LOGIN_USER = gql`\n  mutation Login($user: LoginInput!) {\n    login(user: $user) {\n      token\n      user {\n        id\n        name\n        email\n        avatar\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { Mutation } from \"react-apollo\";\n\nimport LoginPage from \"../LoginPage\";\n\nimport { LOGIN_USER } from \"../../graphql/mutation/loginMutation\";\n\nconst LoginPageContainer = props => {\n  return (\n    <Mutation\n      mutation={LOGIN_USER}\n      onCompleted={({ login }) => {\n        localStorage.setItem(\"token\", login.token);\n        localStorage.setItem(\"user\", JSON.stringify(login.user));\n        props.history.push(\"/home\");\n      }}\n    >\n      {(login, { error }) => {\n        return (\n          <LoginPage history={props.history} login={login} error={error} />\n        );\n      }}\n    </Mutation>\n  );\n};\n\nexport default LoginPageContainer;\n","import React from \"react\";\n\nconst SearchInput = () => {\n  return (\n    <div className=\"card-header\">\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          name=\"\"\n          className=\"form-control search\"\n        />\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text search_btn\">\n            <i className=\"fas fa-search\" />\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\n\nconst UserInfoCard = props => {\n  return (\n    <div className=\"d-flex bd-highlight\">\n      <div className=\"img_cont\">\n        <img src={props.image} className=\"rounded-circle user_img\" alt=\"\" />\n        <span className=\"online_icon\" />\n      </div>\n      <div className=\"user_info\">\n        <span>Chat with {props.name}</span>\n      </div>\n      <div className=\"video_cam\">\n        <span>\n          <i className=\"fas fa-video\" />\n        </span>\n        <span>\n          <i className=\"fas fa-phone\" />\n        </span>\n      </div>\n      <span\n        id=\"action_menu_btn\"\n        style={{ marginRight: \"20px\", lineHeight: \"70px\" }}\n        onClick={props.logout}\n      >\n        Log out\n      </span>\n    </div>\n  );\n};\n\nexport default UserInfoCard;\n","import React from \"react\";\n\nconst MessageItem = props => {\n  return (\n    <div>\n      {props.host ? (\n        <div className=\"d-flex justify-content-end mb-4\">\n          <div className=\"msg_cotainer_send\">\n            <p style={{ marginBottom: \"0px\" }}>{props.content}</p>\n            <span className=\"msg_time_send\">{props.time}</span>\n          </div>\n          <div className=\"img_cont_msg\">\n            <img\n              src={props.image}\n              className=\"rounded-circle user_img_msg\"\n              alt=\"\"\n            />\n          </div>\n        </div>\n      ) : (\n        <div className=\"d-flex justify-content-start mb-4\">\n          <div className=\"img_cont_msg\">\n            <img\n              src={props.image}\n              className=\"rounded-circle user_img_msg\"\n              alt=\"\"\n            />\n          </div>\n          <div className=\"msg_cotainer\">\n            <p style={{ marginBottom: \"0px\" }}>{props.content}</p>\n            <span className=\"msg_time\">{props.time}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MessageItem;\n","export const formatDate = date => {\n  let result = \"\";\n  if (date) {\n    const inputDate = new Date(date);\n    const currentDate = new Date();\n    if (\n      inputDate.getDate() === currentDate.getDate() &&\n      inputDate.getMonth() === currentDate.getMonth() &&\n      inputDate.getFullYear() === currentDate.getFullYear()\n    ) {\n      result =\n        \"Today \" +\n        inputDate.getHours() +\n        \":\" +\n        inputDate.getMinutes() +\n        \":\" +\n        inputDate.getSeconds();\n    } else {\n      result = inputDate.toLocaleString();\n    }\n  }\n  return result;\n};\n","import React, { Component, Fragment } from \"react\";\nimport gql from \"graphql-tag\";\nimport UserInfoCard from \"../components/UserInfoCard\";\nimport MessageItem from \"../components/MessageItem\";\nimport { getLocalUser } from \"../helpers/loginHelper\";\nimport { formatDate } from \"../helpers/dateTime\";\n\nconst CHAT_ADDED = gql`\n  subscription chatAdded($channel: String!) {\n    chatAdded(channel: $channel) {\n      conversationID\n      author\n      content\n      createdAt\n    }\n  }\n`;\n\nexport default class componentName extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      contentChat: []\n    };\n    this.host = getLocalUser();\n    this.conversationID = \"\";\n  }\n\n  componentWillReceiveProps(nextProps) {\n    // Render user\n    if (!nextProps.loadingGetUser && nextProps.user) {\n      this.setState({\n        user: {\n          name: nextProps.user.name,\n          avatar: nextProps.user.avatar\n        }\n      });\n    }\n    // Get content chat\n    let contentChat = [];\n    if (!nextProps.loadingGetConversation) {\n      this.conversationID = nextProps.conversationID;\n      if (this.sub) {\n        this.sub();\n      }\n      this.sub = this.props.subscribeToMore({\n        document: CHAT_ADDED,\n        variables: {\n          channel: this.conversationID\n        },\n        updateQuery: (prev, { subscriptionData }) => {\n          return {\n            getConversation: {\n              contentChat: [\n                ...prev.getConversation.contentChat,\n                subscriptionData.data.chatAdded\n              ],\n              conversationID: this.conversationID,\n              __typename: \"GetConversationResponse\"\n            }\n          };\n        }\n      });\n\n      contentChat = nextProps.contentChat.map(item => ({\n        host: this.host.id === item.author,\n        content: item.content,\n        avatar:\n          this.host.id === item.author\n            ? this.host.avatar\n            : nextProps.user.avatar,\n        createdAt: formatDate(item.createdAt)\n      }));\n    }\n\n    this.setState(\n      {\n        contentChat\n      },\n      () => {\n        this.refs.scroll.scrollTop =\n          this.refs.scroll.scrollHeight - this.refs.scroll.clientHeight;\n      }\n    );\n  }\n  renderListChat = () => {\n    return this.state.contentChat.map((item, index) => (\n      <MessageItem\n        host={item.host}\n        image={item.avatar}\n        content={item.content}\n        time={item.createdAt}\n        key={index}\n      />\n    ));\n  };\n\n  submitChat = event => {\n    event.preventDefault();\n    if (this.refs.contentChat.value && this.conversationID) {\n      this.props.chat({\n        conversationID: this.conversationID,\n        author: this.host.id,\n        content: this.refs.contentChat.value\n      });\n    }\n    this.refs.contentChat.value = \"\";\n  };\n\n  render() {\n    const { user } = this.state;\n    return (\n      <Fragment>\n        <div className=\"card-header msg_head\">\n          <UserInfoCard\n            image={user.avatar}\n            name={user.name}\n            logout={() => {\n              localStorage.clear();\n              this.props.history.push(\"/\");\n            }}\n          />\n        </div>\n        <div className=\"card-body msg_card_body\" ref=\"scroll\">\n          {this.renderListChat()}\n        </div>\n        <form className=\"card-footer\">\n          <div className=\"input-group\">\n            <div className=\"input-group-append\">\n              <span className=\"input-group-text attach_btn\">\n                <i className=\"fas fa-paperclip\" />\n              </span>\n            </div>\n            <input\n              ref=\"contentChat\"\n              name=\"\"\n              className=\"form-control type_msg\"\n              placeholder=\"Type your message...\"\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"input-group-text send_btn\"\n                type=\"submit\"\n                onClick={this.submitChat}\n              >\n                <i className=\"fas fa-location-arrow\" />\n              </button>\n            </div>\n          </div>\n        </form>\n      </Fragment>\n    );\n  }\n}\n","import { graphql, compose } from \"react-apollo\";\nimport ChatRoom from \"../components/ChatRoom\";\nimport gql from \"graphql-tag\";\nimport { getLocalUser } from \"../helpers/loginHelper\";\n\nconst GET_USER = gql`\n  query GetUser($id: String!) {\n    getUser(id: $id) {\n      id\n      name\n      email\n      avatar\n    }\n  }\n`;\n\nconst GET_CONVERSATION = gql`\n  query GetConversation($clientOne: String!, $clientTwo: String!) {\n    getConversation(clientOne: $clientOne, clientTwo: $clientTwo) {\n      conversationID\n      contentChat {\n        conversationID\n        author\n        content\n        createdAt\n      }\n    }\n  }\n`;\n\nconst CHAT = gql`\n  mutation Chat($message: MessageInput!) {\n    chat(message: $message)\n  }\n`;\n\nconst ChatRoomContainer = compose(\n  graphql(GET_USER, {\n    options: props => ({\n      variables: {\n        id: props.match.params.id\n      }\n    }),\n    props: props => {\n      return {\n        loadingGetUser: props.data.loading,\n        errorGetUser: props.data.error,\n        user: props.data.getUser || [],\n        hitory: props.hitory\n      };\n    }\n  }),\n  graphql(GET_CONVERSATION, {\n    options: props => {\n      return {\n        variables: {\n          clientOne: getLocalUser().id,\n          clientTwo: props.match.params.id\n        }\n      };\n    },\n    props: props => {\n      return {\n        loadingGetConversation: props.data.loading,\n        errorGetConversation: props.data.error,\n        contentChat:\n          (props.data.getConversation &&\n            props.data.getConversation.contentChat) ||\n          [],\n        conversationID:\n          (props.data.getConversation &&\n            props.data.getConversation.conversationID) ||\n          [],\n        subscribeToMore: props.data.subscribeToMore\n      };\n    }\n  }),\n  graphql(CHAT, {\n    props: props => ({\n      chat: messageInput => {\n        return props.mutate({\n          variables: {\n            message: messageInput\n          }\n        });\n      }\n    })\n  })\n)(ChatRoom);\n\nexport default ChatRoomContainer;\n","import React from \"react\";\n\nconst ContactCard = props => (\n  <li className={props.active === true ? \"active\" : \"\"}>\n    <div className=\"d-flex bd-highlight\">\n      <div className=\"img_cont\">\n        <img src={props.image} className=\"rounded-circle user_img\" alt=\"\" />\n        <span\n          className={`online_icon ${\n            props.status === \"online\" ? \"\" : \"offline\"\n          }`}\n        />\n      </div>\n      <div className=\"user_info\">\n        <span>{props.name}</span>\n        <p>{props.content}</p>\n      </div>\n    </div>\n  </li>\n);\n\nexport default ContactCard;\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nconst CustomLink = props => {\n  return (\n    <Route\n      path={props.to}\n      exact={props.activeOnlyWhenExact}\n      children={({ match }) => (\n        <div className={match ? \"active\" : \"\"}>\n          <Link to={props.to}>{props.children}</Link>\n        </div>\n      )}\n    />\n  );\n};\n\nexport default CustomLink;\n","import React from \"react\";\nimport ContactCard from \"../components/ContactCard\";\nimport CustomLink from \"../components/CustomLink\";\n\nconst ListContact = props => {\n  const listUser = props.users.map((item, index) => (\n    <CustomLink to={`${props.match.url}/${item.id}`} key={index}>\n      <ContactCard\n        image={item.avatar}\n        status=\"online\"\n        name={item.name}\n        content={`${item.name} is active`}\n      />\n    </CustomLink>\n  ));\n  return (\n    <div className=\"card-body contacts_body\">\n      <div className=\"contacts\">{listUser}</div>\n    </div>\n  );\n};\n\nexport default ListContact;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { checkAuth } from \"../helpers/loginHelper\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        checkAuth() ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\",\n              state: { from: props.location }\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from \"react\";\n\nimport \"./styles/HomePage.css\";\n\nimport SearchInput from \"../components/SearchInput\";\n\nimport ChatRoomContainer from \"../containers/ChatRoomContainer\";\nimport ListContact from \"../components/ListContact\";\nimport PrivateRoute from \"../components/PrivateRoute\";\n\nconst HomePage = props => {\n  return (\n    <div className=\"container-fluid h-100\">\n      <div className=\"row justify-content-center h-100\">\n        <div className=\"col-md-4 col-xl-3 chat\">\n          <div className=\"card mb-sm-3 mb-md-0 contacts_card\">\n            <SearchInput />\n            <ListContact match={props.match} users={props.users} />\n          </div>\n        </div>\n        <div className=\"col-md-8 col-xl-6 chat\">\n          <div className=\"card\">\n            <PrivateRoute\n              path={`${props.match.url}/:id`}\n              component={ChatRoomContainer}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import { graphql, compose } from \"react-apollo\";\nimport HomePage from \"../HomePage\";\nimport gql from \"graphql-tag\";\nimport { getLocalUser } from \"../../helpers/loginHelper\";\n\nconst GET_USERS = gql`\n  query GetUsers {\n    getUsers {\n      id\n      name\n      email\n      avatar\n    }\n  }\n`;\n\nconst HomePageContainer = compose(\n  graphql(GET_USERS, {\n    options: props => ({\n      fetchPolicy: \"cache-and-network\"\n    }),\n    props: props => {\n      return {\n        loading: props.data.loading,\n        error: props.data.error,\n        users: props.data.getUsers\n          ? props.data.getUsers.filter(item => {\n              const user = getLocalUser();\n              return item.id !== user.id;\n            })\n          : []\n      };\n    }\n  })\n)(HomePage);\n\nexport default HomePageContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { ApolloClient } from \"apollo-boost\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { setContext } from \"apollo-link-context\";\nimport { WebSocketLink } from \"apollo-link-ws\";\n\nimport { split } from \"apollo-link\";\nimport { getMainDefinition } from \"apollo-utilities\";\n\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport \"./index.css\";\n\nimport LoginPageContainer from \"./pages/container/LoginPageContainer\";\nimport HomePageContainer from \"./pages/container/HomePageContainer\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nconst httpLink = createHttpLink({\n  // uri: \"http://172.16.126.52:4000/graphql\"\n  uri: \"https://demo-server-chat-app.herokuapp.com/graphql\"\n});\n\nconst wsLink = new WebSocketLink({\n  // uri: `ws://172.16.126.52:4000/graphql`,\n  uri: \"wss://demo-server-chat-app.herokuapp.com/graphql\",\n  options: {\n    reconnect: true\n  }\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"token\");\n  // return the headers to the context so httpLink can read them\n  const setHeader = { ...headers };\n  if (token) setHeader.authorization = token;\n  return {\n    headers: {\n      ...setHeader\n    }\n  };\n});\n\nconst link = split(\n  ({ query }) => {\n    const { kind, operation } = getMainDefinition(query);\n    return kind === \"OperationDefinition\" && operation === \"subscription\";\n  },\n  wsLink,\n  authLink.concat(httpLink)\n);\n\nconst cache = new InMemoryCache();\nexport const client = new ApolloClient({\n  link,\n  cache\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <BrowserRouter>\n      <Route exact path=\"/\" component={LoginPageContainer} />\n      <PrivateRoute path=\"/home\" component={HomePageContainer} />\n    </BrowserRouter>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}